Профилирование проводилось с помощью утилиты jconsole.

1. Запустили трекер и посмотрела данные в утилите - в графическом обзоре и на вкладке VM Summary.
current heap size = 20 480 kb
maximum heap size = 4 126 768 kb

live threads 14
peak 15
deamon threads 13
total threads started 15

2. Выбрала п.меню добавить много заявок и указала 10 тыс. заявок
current heap size = 14 237 kb
maximum heap size = 4 126 768 kb

live threads 14
peak 15
deamon threads 13
total threads started 15

Garbage collector:
Name = 'G1 Young Generation', Collections = 2, Total time spent = 0,021 seconds

3. Показать все заявки
сurrent heap size: 30 626 kb

Garbage collector:
Name = 'G1 Young Generation', Collections = 2, Total time spent = 0,021 seconds
Garbage collector:
Name = 'G1 Old Generation', Collections = 0, Total time spent = 0,000 seconds

4. Удалить все заявки
сurrent heap size: 34 722 kb

Garbage collector:
Name = 'G1 Young Generation', Collections = 2, Total time spent = 0,021 seconds
Garbage collector:
Name = 'G1 Old Generation', Collections = 0, Total time spent = 0,000 seconds
-------------------------------------
Таким образом видно, что в момент Добавления заявок в кучу (в секцию "young") были помещены данные (объекты).
Менялись показатели "current heap size" и "Garbage collector".
По графику использования кучи видно, что в моменты обращения к объектам заявок показатель существенно возрастал.

-------------------------------------
Ситуация переподнения памяти:
Добавила 1000000000 заявок. В результате возникла ошибка: и утилита завершилась с ошибкой:
"Exception in thread "main" Exception in thread "RMI TCP Connection(idle)" java.lang.OutOfMemoryError: Java heap space
java.lang.OutOfMemoryError: Java heap space
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:593)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$112/0x0000019181096630.run(Unknown Source)
	at java.base/java.security.AccessController.executePrivileged(AccessController.java:776)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)"

и утилита jconsole при аварийном завершении программы в результате переполнения памяти выдала сообщение о том,
что содеинение сброшено:
"нояб. 30, 2024 5:36:45 PM com.sun.jmx.remote.internal.ClientCommunicatorAdmin$Checker run
WARNING: Failed to check connection: java.net.SocketException: Connection reset
нояб. 30, 2024 5:36:45 PM com.sun.jmx.remote.internal.ClientCommunicatorAdmin$Checker run
WARNING: stopping"